wcnt-1.1001/jwmsynth

// ---------------------------------------------------------------
// header info:

	samplerate 	44100
	bpm		160
	signature 	4/4

// end of header.
// ---------------------------------------------------------------

// this file uses 5 constant modules with each output connected to 
// the input of a wcnt_signal module.  And each of the five 
// wcnt_signal modules are inserted into the switcher module.
// 
// the switcher uses the phase_trig of osc1 to switch between the
// 5 signals.  the output of the switcher module is then used to 
// pitch modulate osc1.

// setup the time_map

time_map
time1  
        time
		signature	4/4	0
		bpm 120	0
        time
time1

// setup how long to process:

wcnt_exit
wcnt_exit_module
        in_bar  time1 out_bar
	exit_bar 6
wcnt_exit_module

// first, create some riffs.  riffs are inserted into the sequencer, and 
// contain note patterns.  riffs are not modules.  The first job of a riff
// is to define the value you will use for a crotchet, or quarter note in 
// that riff, the value you use will determine what values you use for the 
// note lengths and note positions for all notes in the riff.

// currently the wcnt sequencer module is monophonic, one sequencer can play
// only one note at a time.  

riff 
riff1
	quarter_value	16
	//   notename	position	length	velocity
	note	c0	0		7.5	1.0
	note	d0	8		4.5	1.0
	note	e0	16		7.5	1.0
	note	f0	24		4	0.75
	note	g0	32		3.5	0.5
	note	a1	36		8.5	1.0
	note	b1	40		8.5	1.0
	note	c1	48		8.5	1.0
	note	d1	56		5.5	1.0
riff1

// notice how from position 32, the notes will overlap, ie the notes are
// longer than the seperation between them.  this will cause the pitch of
// the notes to 'slide' up to the next, rather than jumping in pitch
// instantly. This is known as portamento.

sequencer
seq1
        track // add four bars of riff1:
		riff1	0
		riff1	1
		riff1	2
		riff1	3
        track
	// connect sequencer to keep in sync with time1 time_map module
        in_bar			time1	out_bar
        in_bar_trig     	time1	out_bar_trig
        in_pos_step_size        time1	out_pos_step_size
	// parameters for module: sequencer
        velocity_response_time  5	// take 5 ms to change velocity
        hold_notename		off	// ignore hold_notename
seq1

clock
lfoclock
	in_freq_mod1	off
	freq	0.35
	freq_mod1_size	0.0
lfoclock

sine_wave
lfowave
	in_phase_trig	lfoclock	out_phase_trig
	in_deg_size	lfoclock	out_deg_size
	recycle_mode 		off
	on_trig_reset_phase	off
	phase_cycles		1.0
lfowave

osc_clock
osc1
	// connect with seq1 sequencer module.
        in_note_on_trig		seq1	out_note_on_trig
        in_note_slide_trig      seq1	out_note_slide_trig
        in_frequency    	seq1	out_frequency
        in_freq_mod1    	fswitch	out_output
        in_freq_mod2    	off
        octave_offset		1
        tuning_semitones        0.00	
        portamento_time 	50.0	// duration of a note_slide event
        freq_mod1_size  	1.25
        freq_mod2_size  	0.00
osc1

sine_wave
swave										
	in_phase_trig	osc1	out_phase_trig
	in_deg_size	osc1	out_deg_size
	recycle_mode		off 				
	on_trig_reset_phase	off 				
	phase_cycles 1.0					
swave


// create some constant modules for eventually modifying frequency of osc1

constant f1 value 1.00 f1
constant f2 value 1.25 f2
constant f3 value 0.25 f3
constant f4 value 2.35 f4
constant f5 value 5.11 f5

// switcher can only switch between wcnt_signal modules, so create them

wcnt_signal fs1 in_signal f1 out_output fs1
wcnt_signal fs2 in_signal f2 out_output fs2
wcnt_signal fs3 in_signal f3 out_output fs3
wcnt_signal fs4 in_signal f4 out_output fs4
wcnt_signal fs5 in_signal f5 out_output fs5

// use switcher to switch between constants at osc1 phase_trig
switcher
fswitch
        signals
                fs1 fs2 fs3 fs4 fs5
        signals
        in_trig		osc1	out_phase_trig
        xfade_time      0.025 // ms
fswitch

// for simplicity use the same adsr for all sounds
// added an extra release section into the adsr..

adsr
adsr1
        envelope
                attack	5.0	1.0	15.0	1.0
                decay   20.0	0.8	35.0	0.8
		release	35.0	0.4	45.0	0.4
                release	135.0	0.0	150.0	0.0
        envelope
	// connect to sequencer triggers
        in_note_on_trig		seq1	out_note_on_trig
        in_note_off_trig        seq1	out_note_off_trig
	// nb don't use out_velocity_ramped here:
        in_velocity     	seq1	out_velocity 
        start_level     0.0
        sustain_state   on	// hold decay volume level until note_off?
        zero_retrigger  off
adsr1

echo
echo1
        in_signal       swave	out_output
        in_gain_mod     adsr1	out_output
        in_feedback     echo2	out_output
        in_feedback_mod 	off
        delay_time      	234.56
        gain			0.75
        gain_modsize    	1.0
        feedback        	0.75
        feedback_modsize        0.0
        wet/dry 		0.65
echo1

echo
echo2
        in_signal       echo1		out_output
        in_gain_mod     off
        in_feedback     echo3		out_output
        in_feedback_mod off
        delay_time      	123.45
        gain			0.75
        gain_modsize    	0.0
        feedback        	0.60
        feedback_modsize        0.0
        wet/dry 		0.65
echo2

echo
echo3
        in_signal       echo2		out_output
        in_gain_mod     off
        in_feedback     echo1		out_output
        in_feedback_mod off
        delay_time      	67.89
        gain			0.75
        gain_modsize    	0.0
        feedback        	0.45
        feedback_modsize        0.0
        wet/dry 		0.65
echo3

constant one value 1.0 one

mono_amp
amp1
	in_signal	swave	out_output
	in_amp_eg	adsr1	out_output
	in_amp_mod	seq1	out_velocity_ramp
	amplitude	25000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp1

mono_amp
amp2
	in_signal	echo1	out_output
	in_amp_eg	one	out_output
	in_amp_mod	seq1	out_velocity_ramp
	amplitude	10000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp2

mix_chan
ch1
	in_left		amp1	out_mono
	in_right	amp1	out_mono
ch1

mix_chan
ch2	
	in_left		amp2	out_mono
	in_right	amp2	out_mono
ch2

mixer
mix1
	mixdesk
		ch1	ch2
	mixdesk
	master_level	0.8
mix1

wavfile_out
wav1
	in_left		mix1	out_left
	in_right	mix1	out_right
	in_bar		time1	out_bar
	in_bar_trig	time1	out_bar_trig
	filename	multifreq01.wav
	start_bar	0
	end_bar		5
wav1

// Although there are only four bars in the sequencer, wav1 stops writing when
// bar 5 is reached because the release time of the ADSR causes audible sound 
// to last beyond the end bar 3 and into bar 4.

wcnt-1.1001/jwmsynth
