wcnt-1.1z/jwmsynth
//----------------------------------------------------------------------------

samplerate 	44100
bpm		135
signature 	4/4

// the sound this file produces has some noise in it which sounds like something
// going wrong.  I can tell you precisely what that is:  the user_wave is running
// at frequencies which are too high for it to cope with, so bits of it go missing
// at high frequencies, and re-appear in lower frequencies.

//-----------------------------------------------------------------------------
// constants

constant	one	value	1.0	one

//-----------------------------------------------------------------------------
// setup the time_map

time_map
time1  
        meter_map
        meter_map
	bpm_map	
	bpm_map	
time1

//-----------------------------------------------------------------------------
// first, create some riffs.  riffs are inserted into the sequencer, and 
// contain note patterns.  riffs are not modules.  The first job of a riff
// is to define the value you will use for a crotchet, or quarter note in 
// that riff, the value you use will determine what values you use for the 
// note lengths and note positions for all notes in the riff.

// currently the wcnt sequencer module is monophonic, one sequencer can play
// only one note at a time.  

riff 
riff1
	quarter_value	16
	note
		name	e0	pos	0	len	7.5	vel	1.0
	note
		name	d0	pos	8	len	6.5	vel	0.5
	note
		name	g0	pos	16	len	4.5	vel	1.0
	note
		name	g0	pos	24	len	3.5	vel	0.4
	note
		name	f0	pos	32	len	6.5	vel	0.7
	note
		name	c0	pos	40	len	2.5	vel	0.6
	note
		name	c0	pos	44	len	6.5	vel	0.25
	note
		name	f0	pos	56	len	2.5	vel	0.8
	note
		name	f0	pos	60	len	3.5	vel	0.4
	note
		name	g0	pos	64	len	7.5	vel	0.4
	note
		name	c0	pos	72	len	2.5	vel	0.2
	note
		name	d0	pos	80	len	7.8	vel	1.0
	note
		name	c0	pos	88	len	6.5	vel	0.7
	note
		name	c0	pos	96	len	5.7	vel	0.35
	note 
		name	d0	pos	104	len	12.5	vel	0.5
riff1

sequencer
seq1
        track
		riff_node	
			riff	riff1	bar	0
			transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1	bar	2
			transpose	0	start_len	0	end_len	0

		riff_node
			riff	riff1	bar	4
			transpose	0	start_len	0	end_len	0

		riff_node
			riff	riff1	bar	6
			transpose	1	start_len	0	end_len	8

		riff_node
			riff	riff1	bar	8
			transpose	0	start_len	0	end_len	0

		riff_node
			riff	riff1	bar	10
			transpose	0	start_len	0	end_len	0

		riff_node
			riff	riff1	bar	12
			transpose	0	start_len	0	end_len	0

		riff_node
			riff	riff1	bar	14
			transpose	1	start_len	0	end_len	8

        track

	// connect sequencer to keep in sync with time1 time_map module
        in_bar			time1	out_bar
        in_bar_trig     	time1	out_bar_trig
        in_pos_step_size        time1	out_pos_step_size
	in_beats_per_bar	time1	out_beats_per_bar
	in_beat_value		time1	out_beat_value

	// parameters for module: sequencer
        velocity_response_time  5	// take 5 ms to change velocity
        hold_notename		off	// ignore hold_notename
seq1


//-----------------------------------------------------------------------------
clock
lfoclock1
	in_freq_mod1	off
	freq	.2135
	freq_mod1_size	0.0
lfoclock1

sine_wave
lfowave1
	in_phase_trig	lfoclock1	out_phase_trig
	in_deg_size	lfoclock1	out_deg_size
	recycle_mode 		off
	on_trig_reset_phase	off
	phase_cycles		1.0
lfowave1

clock
lfoclock2
	in_freq_mod1	off
	freq	.1512135
	freq_mod1_size	0.0
lfoclock2

sine_wave
lfowave2
	in_phase_trig	lfoclock2	out_phase_trig
	in_deg_size	lfoclock2	out_deg_size
	recycle_mode 		off
	on_trig_reset_phase	off
	phase_cycles		1.0
lfowave2

clock
lfoclock3
	in_freq_mod1	off
	freq	.1037872135
	freq_mod1_size	0.0
lfoclock3

sine_wave
lfowave3
	in_phase_trig	lfoclock3	out_phase_trig
	in_deg_size	lfoclock3	out_deg_size
	recycle_mode 		off
	on_trig_reset_phase	off
	phase_cycles		1.0
lfowave3

clock
lfoclock4
	in_freq_mod1	off
	freq	.04737872135
	freq_mod1_size	0.0
lfoclock4

sine_wave
lfowave4
	in_phase_trig	lfoclock3	out_phase_trig
	in_deg_size	lfoclock3	out_deg_size
	recycle_mode 		off
	on_trig_reset_phase	off
	phase_cycles		1.0
lfowave4

adsr
adsr1
        envelope
		section	name	attack	
			ut	5	ul	1.0	
			lt	6	ll	1.0
                section	name	decay	
			ut	60.0	ul	0.9	
			lt	55.0	ll	0.9
                section	name	release		
			ut	120.0	ul	0.0		
			lt	105.0	ll	0.0
        envelope

        in_note_on_trig		seq1	out_note_on_trig
        in_note_off_trig        seq1	out_note_off_trig
        in_velocity     	seq1	out_velocity 

	up_thresh	1.00
	lo_thresh	0.35
        start_level     0.0
        sustain_state   on
        zero_retrigger  off
adsr1

// envelope key:
//	ut = upper time		ul = upper level
//	lt = lower time		ll = lower level

adsr
adsr2
        envelope
		section	name	attack		
			ut	0.95	ul	0.4		
			lt	0.95	ll	0.4
		section	name	attack		
			ut	5	ul	0.3		
			lt	6	ll	0.3
                section	name	decay   	
			ut	50.0	ul	0.6		
			lt	40.0	ll	0.6
		section	name	decay		
			ut	60.0	ul	-0.25		
			lt	60.0	ll	-0.25
                section	name	release		
			ut	120.0	ul	-1.0		
			lt	105.0	ll	-1.0
        envelope
        in_note_on_trig		seq1	out_note_on_trig
        in_note_off_trig        seq1	out_note_off_trig
        in_velocity     	seq1	out_velocity 

	up_thresh	1.00
	lo_thresh	0.35
        start_level     0.0
        sustain_state   off
        zero_retrigger  off
adsr2

adsr
adsr3
        envelope
		section	name	attack			
			ut	5	ul	1.0		
			lt	6	ll	1.0
                section	name	decay   		
			ut	80.0	ul	0.9		
			lt	72.0	ll	0.9
		section	name	release			
			ut	80.0	ul	0.6		
			lt	70.0	ll	0.6
                section	name	release			
			ut	270.0	ul	0.0		
			lt	255.0	ll	0.0
        envelope
        in_note_on_trig		seq1	out_note_on_trig
        in_note_off_trig        seq1	out_note_off_trig
        in_velocity     	seq1	out_velocity 

	up_thresh	1.00
	lo_thresh	0.35
        start_level     0.0
        sustain_state   on
        zero_retrigger  off
adsr3


//-----------------------------------------------------------------------------
//	setup a very low frequency osc_clock to run a user wave.  the user wave
//	is triggered by note_on
//
osc_clock
ctrl_osc1
	// connect with seq1 sequencer module.
        in_note_on_trig		seq1	out_note_on_trig
        in_note_slide_trig      seq1	out_note_slide_trig
        in_frequency    	seq1	out_frequency
        in_freq_mod1    	fswitch	out_output
        in_freq_mod2    	off
        octave_offset		-8	// low frequency
        tuning_semitones        -0.10	
        portamento_time 	250.0	// duration of a note_slide event
        freq_mod1_size  	4.0
        freq_mod2_size  	0.00
ctrl_osc1

user_wave
uwave
        waveform
		//  updegree uplevel lodegreelolevel
		vertex 
			ud	5	ul	1.0
			ld 	10	ll	1.0
		vertex  
			ud	10	ul	0.75	
			ld 	40	ll	0.75
		vertex  
			ud	50	ul	0.5	
			ld 	100	ll	0.5
		vertex  
			ud	180	ul	0.0	
			ld 	340	ll	0.0
        waveform
        in_phase_trig   seq1		out_note_on_trig
        in_deg_size     ctrl_osc1	out_deg_size
        in_level_mod    lfowave1	out_output
        in_time_mod     lfowave1	out_output
        recycle_mode    off
        zero_retrigger  off
uwave

// waveform key:
//	ud = upper degree	ul = upper level
//	ld = lower degree	ld = lower level

// the second ctrl_osc is used to trigger a sample & hold on the user wave

osc_clock
ctrl_osc2
	// connect with seq1 sequencer module.
        in_note_on_trig		seq1	out_note_on_trig
        in_note_slide_trig      seq1	out_note_slide_trig
        in_frequency    	seq1	out_frequency
        in_freq_mod1    	fswitch	out_output
        in_freq_mod2    	off
        octave_offset		1	
        tuning_semitones        0.10	
        portamento_time 	250.0	// duration of a note_slide event
        freq_mod1_size  	4.0
        freq_mod2_size  	0.00
ctrl_osc2

sample_hold
s&h1
        in_trig		ctrl_osc2	out_phase_trig
        in_signal       uwave		out_output
        decay_time      0.0	// 0.0 = no decay to zero
s&h1

square_wave
sq1
        in_phase_trig   ctrl_osc2	out_phase_trig
        in_deg_size	ctrl_osc2	out_deg_size
        in_pwm  	lfowave1	out_output
        pulse_width     0.5
        pwm_size        0.9
        recycle_mode    off
sq1

wcnt_signal	fs1	in_signal	one	out_output	level	0.600	fs1
wcnt_signal	fs2	in_signal	one	out_output	level	0.125	fs2
wcnt_signal	fs3	in_signal	one	out_output	level	1.000	fs3
wcnt_signal	fs4	in_signal	one	out_output	level	0.960	fs4
wcnt_signal	fs5	in_signal	one	out_output	level	0.800	fs5

switcher
fswitch
        signals
                synthmod	name	fs1 
                synthmod	name	fs2 
                synthmod	name	fs3 
                synthmod	name	fs4
                synthmod	name	fs5
        signals
        in_trig		sq1	out_pulse_off_trig
        xfade_time      0.0
fswitch

//-----------------------------------------------------------------------------
//	now the osc_clock which drives the sound heard, it's frequency modulated
//	by the sample & hold above

osc_clock
osc1
	// connect with seq1 sequencer module.
        in_note_on_trig		seq1	out_note_on_trig
        in_note_slide_trig      seq1	out_note_slide_trig
        in_frequency    	seq1	out_frequency
        in_freq_mod1    	s&h1	out_output
        in_freq_mod2    	fswitch	out_output
        octave_offset		0
        tuning_semitones        0.00	
        portamento_time 	0.0
        freq_mod1_size  	8.0
        freq_mod2_size  	4.0
osc1

// need recycle mode, as deg_size is 4 times frequency of phase_trig

sine_wave
swave										
	in_phase_trig	osc1	out_phase_trig
	in_deg_size	osc1	out_deg_size
	recycle_mode		off
	on_trig_reset_phase	off 				
	phase_cycles 1.0					
swave

multiplier
waveform
	in_signal	swave	out_output
	in_modifier	adsr1	out_output
waveform

//-----------------------------------------------------------------------------
// filter's clock source -- uses lfo_clock as it has two freq modulation inputs
// but it's not being used with a low frequency - nevermind.

lfo_clock
cutoff_clock
        in_phase_trig   off
        in_freq_mod1    lfowave4	out_output
        in_freq_mod2    adsr2		out_output
        freq    	1000.00
        freq_mod1_size  8.0
        freq_mod2_size  4.0
cutoff_clock

//---------------------
// don't want all the filters to run at same frequency, this 
// creates different frequencies for the left and right filters.

constant i1 value 0.75 i1

multiplier
m1
	in_signal	cutoff_clock	out_deg_size
	in_modifier	i1		out_output
m1

multiplier
m2
	in_signal	m1	out_output
	in_modifier	i1	out_output
m2

lp_filter
lpf1
        in_signal       	waveform	out_output
        in_cutoff_degsize       cutoff_clock	out_deg_size
        in_feedback     	lpf4		out_output
        in_feedback_mod 	lfowave3	out_output
        feedback        	-0.835
        feedback_modsize        0.75
        wet/dry 		1.0
lpf1

range_limit
rl1
        in_signal       lpf1	out_wet_output
        sig_range_hi    1.0
        sig_range_lo    -1.0
rl1

lp_filter
lpf2
        in_signal       	rl1		out_output
        in_cutoff_degsize       m1		out_output
        in_feedback     	rl2		out_output
        in_feedback_mod 	lfowave2	out_output
        feedback        	0.523
        feedback_modsize        0.65
        wet/dry 		1.0
lpf2

range_limit
rl2
        in_signal       lpf2	out_wet_output
        sig_range_hi    0.95
        sig_range_lo    -0.95
rl2

lp_filter
lpf3
        in_signal       	lpf2		out_output
        in_cutoff_degsize       m2		out_output
        in_feedback     	rl3		out_output
        in_feedback_mod 	lfowave1	out_output
        feedback        	0.51
        feedback_modsize        0.55
        wet/dry 		1.0
lpf3

range_limit
rl3
        in_signal       lpf3	out_wet_output
        sig_range_hi    0.75
        sig_range_lo    -0.75
rl3

lp_filter
lpf4
        in_signal       	rl3	out_output
        in_cutoff_degsize       m2	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
lpf4

constant lp_ds value 18 lp_ds

multiplier
mx5
	in_signal	lpf1	out_output
	in_modifier	adsr3	out_output
mx5

lp_filter
lpf5
        in_signal       	mx5	out_output
        in_cutoff_degsize       lp_ds	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
lpf5


//-----------------------------------------------------------------------------
// now add some echo, but without much low frequency
//

constant hp_ds value 18 hp_ds

// to calculate: degsize = 360 / (samplerate / frequency)

hp_filter
hpf1
        in_signal       	lpf5	out_output
        in_cutoff_degsize       hp_ds	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
hpf1

echo
echo_l
        in_signal       hpf1		out_output
        in_gain_mod     off
        in_feedback     echo_r		out_wet_output
        in_feedback_mod off
        delay_time      151.0
        gain    	0.5
        gain_modsize    1.0
        feedback        0.55
        feedback_modsize 0.0
        wet/dry 	1.0
echo_l

echo
echo_r
        in_signal       hpf1		out_output
        in_gain_mod     off
        in_feedback     echo_l		out_wet_output
        in_feedback_mod off
        delay_time      176.0
        gain    	0.5
        gain_modsize    0
        feedback        0.55
        feedback_modsize 0.0
        wet/dry 	1.0
echo_r

//-----------------------------------------------------------------------------
// amplifying time!
//
// the signal was shaped before it was filtered, so 
// applying the adsr to the amplifier would cut out
// a lot of the nice stuff that's been done...

mono_amp
amp1
	in_signal	lpf5	out_output
	in_amp_eg	one	out_output
	in_amp_mod	seq1	out_velocity_ramp
	amplitude	25000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp1

stereo_amp
amp2
	in_l		echo_l	out_output
	in_r		echo_r	out_output
	in_amp_eg	one	out_output
	in_amp_mod	seq1	out_velocity_ramp
	left_amplitude	10000	// 32767 is the maximum amplitude
	right_amplitude	10000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp2


mix_chan ch1	in_left		amp1	out_mono
		in_right	amp1	out_mono	ch1

mix_chan ch2	in_left		amp2	out_left
		in_right	amp2	out_right	ch2

// 	add as many mix_chan(nels) as you like!

mixer
mix1
        mix
		synthmod	name	ch1	
		synthmod	name	ch2
        mix
        master_level    0.85
mix1

//-----------------------------------------------------------------------------
// time to spew it all out

wavfile_out
wav1
	in_left		mix1	out_left
	in_right	mix1	out_right
	in_bar		time1	out_bar
	in_bar_trig	time1	out_bar_trig
	filename	blam001.wav
	start_bar	0
	end_bar		17
wav1

// setup how long to process:
wcnt_exit
wcnt_exit_module
        in_bar  time1 out_bar
	exit_bar 17
wcnt_exit_module

wcnt-1.1z/jwmsynth
