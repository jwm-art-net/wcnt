wcnt-1.1za/jwmsynth
//----------------------------------------------------------------------------

header time.wc  // loader header from time.wc and not here.

constant	one	value	1.0	one

//-----------------------------------------------------------------------------
// setup the time_map
time_map
time1
	meter_map
		meter 
			tsig	4/4	bar	0
	meter_map
	bpm_map
		tempo	
			bpm	80	bar	0
        bpm_map
time1


//-----------------------------------------------------------------------------
// first, create some riffs.  riffs are inserted into the sequencer, and 
// contain note patterns.  riffs are not modules.  The first job of a riff
// is to define the value you will use for a crotchet, or quarter note in 
// that riff, the value you use will determine what values you use for the 
// note lengths and note positions for all notes in the riff.

// the riff cannot handle polyphany


riff 
riff1
	quarter_value	16
	note	
		name	g0	pos	0	len	8.5	vel	1.0
	note	
		name	d0	pos	32	len	2.5	vel	1.0
	note		
		name	e0	pos	56	len	2.5	vel	1.0
riff1

riff 
riff1b
	quarter_value	16 
	note		
		name	f0	pos	20	len	8.5	vel	0.8
	note 		
		name	d0	pos	44	len	2.5	vel	0.5
riff1b

riff 
riff2
	quarter_value	16 
	note		
		name	b0	pos	0	len	5.5	vel	1.0
	note		
		name	f0	pos	24	len	1.5	vel	0.7
riff2


//-----------------------------------------------------------------------------


sequencer
seq1
        track
		riff_node	
			riff	riff1	
			bar	0	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1	
			bar	1	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1b	
			bar	4	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff2	
			bar	5	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1	
			bar	8	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1	
			bar	9	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff1b	
			bar	12	transpose	0	start_len	0	end_len	0

		riff_node	
			riff	riff2	
			bar	13	transpose	0	start_len	0	end_len	0
        track

        in_bar			time1	out_bar
        in_bar_trig     	time1	out_bar_trig
        in_pos_step_size        time1	out_pos_step_size
	in_beats_per_bar	time1	out_beats_per_bar
	in_beat_value		time1	out_beat_value

        velocity_response_time  5	// take 5 ms to change velocity
        hold_notename		off	// ignore hold_notename
seq1

//-----------------------------------------------------------------------------
// sampler needs a deg_size to playback the sample at different rates.
// use an osc_clock to get it to playback at musical note frequencies.
osc_clock
osc1
        in_note_on_trig		seq1	out_note_on_trig
        in_note_slide_trig      seq1	out_note_slide_trig
        in_frequency    	seq1	out_frequency
        in_freq_mod1    	fswitch	out_output
        in_freq_mod2    	off

        octave_offset		0
        tuning_semitones        0.00	
        portamento_time 	250.0	// duration of a note_slide event
        freq_mod1_size  	4.0
        freq_mod2_size  	0.00
osc1

constant four value 4 four

multiplier degsz4
	in_signal	osc1	out_deg_size
	in_modifier	four	out_output
degsz4

rnd_trigger
rnd_phase
//inputs for module: rnd_trigger
        in_trig 	osc1	out_phase_trig
// parameters for module: rnd_trigger
        probability     0.25
        not_probability 0.75
// outputs for module: rnd_trigger
// out_trig
// out_not_trig
rnd_phase

square_wave
sq1
        in_phase_trig   rnd_phase	out_trig
        in_deg_size	degsz4		out_output
        in_pwm  	modsin1		out_output
        pulse_width     0.5
        pwm_size        0.5
        recycle_mode    on
sq1

// need recycle mode, as deg_size is 4 times frequency of phase_trig

sine_wave
swave										
	in_phase_trig	rnd_phase	out_not_trig	//osc1	out_phase_trig
	in_deg_size	osc1		out_deg_size
	recycle_mode		off
	on_trig_reset_phase	off 				
	phase_cycles 1.0					
swave

// switcher can only switch between wcnt_signal modules, so create them

wcnt_signal fs1	in_signal	one	out_output	level	1.00	fs1
wcnt_signal fs2	in_signal	one	out_output	level	2.25	fs2
wcnt_signal fs3	in_signal	one	out_output	level	2.00	fs3
wcnt_signal fs4	in_signal	one	out_output	level	0.75	fs4
wcnt_signal fs5	in_signal	one	out_output	level	3.50	fs5

// use switcher to switch between constants at osc1 phase_trig
switcher
fswitch
        signals
                synthmod 	name	fs1 
                synthmod 	name	fs2 
                synthmod 	name	fs3 
                synthmod 	name	fs4
                synthmod 	name	fs5
        signals
        in_trig		sq1	out_pulse_off_trig
        xfade_time      0.025 // ms
fswitch

adsr
adsr1
        envelope
		section	name	attack	
			ut	50	ul	0.25
			lt	50	ll	0.25

                section	name	attack	
			ut	215.0	ul	1.0	
			lt	220.0	ll	1.0

                section	name	decay	
			ut	20.0	ul	0.9
			lt	25.0	ll	0.9

		section	name	decay	
			ut	15.0	ul	0.26
			lt	15.0	ll	0.26

                section	name	release	
			ut	220.0	ul	0.0
			lt	215.0	ll	0.0
        envelope

        in_note_on_trig		seq1	out_note_on_trig
        in_note_off_trig        seq1	out_note_off_trig
        in_velocity     	seq1	out_velocity 

	up_thresh	0.5	// max velocity for triggering lower envelope
	lo_thresh	1.0	// min velocity for triggering upper envelope
        start_level     0.0
        sustain_state   on	// hold volume level from decay section until note_off
        zero_retrigger  off
adsr1


//-----------------------------------------------------------------------------
// shape the sound using adsr and quieten it down a tad
constant quieten value 0.35 quieten

multiplier
msc0
	in_signal	swave	out_output
	in_modifier	quieten	out_output
msc0

multiplier
msc1
	in_signal	msc0 	out_output
	in_modifier	adsr1	out_output
msc1

//-----------------------------------------------------------------------------
// lets just pan the msc1 before filtering (now for left+right)

clock
pclock1
        in_freq_mod1    modsin1	out_output
        freq    0.4332221111
        freq_mod1_size  2.0
pclock1

sine_wave
panctrl
        in_phase_trig   	pclock1	out_phase_trig
        in_deg_size     	pclock1	out_deg_size
        recycle_mode    	off
        on_trig_reset_phase     off
        phase_cycles    	1.0
panctrl

panner
pan1
        in_signal       msc0	out_output
        in_pan_mod      panctrl	out_output
        pan     	0.5
        pan_mod_size    0.99
pan1

//-----------------------------------------------------------------------------
// create clocks to run filters with

// clock to modulate the frequency clock
clock
clock1
        in_freq_mod1    modsin2	out_output
        freq    	0.13216
        freq_mod1_size  2.0
clock1

sine_wave
modsin1
        in_phase_trig   	clock1	out_phase_trig
        in_deg_size     	clock1	out_deg_size
        recycle_mode    	off
        on_trig_reset_phase     off
        phase_cycles    	1.0
modsin1

// this clock runs at the frequency that the filters will
clock
clock2
        in_freq_mod1    modsin1	out_output
        freq    	2000
        freq_mod1_size  2.0
clock2

sine_wave
modsin2
        in_phase_trig   	clock2	out_phase_trig
        in_deg_size     	clock2	out_deg_size
        recycle_mode    	off
        on_trig_reset_phase     off
        phase_cycles    	1.0
modsin2

//---------------------
// don't want all the filters to run at same frequency, this 
// creates different frequencies for the left and right filters.

constant i1_l value 0.75 i1_l

multiplier
m1_l
	in_signal	clock2	out_deg_size
	in_modifier	i1_l	out_output
m1_l

multiplier
m2_l
	in_signal	m1_l	out_output
	in_modifier	i1_l	out_output
m2_l

constant i1_r value 1.25 i1_r

multiplier
m1_r
	in_signal	clock2	out_deg_size
	in_modifier	i1_r	out_output
m1_r

multiplier
m2_r
	in_signal	m1_r	out_output
	in_modifier	i1_r	out_output
m2_r

//-----------------------------------------------------------------------------
// there is a set of filters for the left channel, and another set for the 
// right.  lpf2_l uses feedback from lpf2_r, and vice versa, and lpf3_l 
// uses feedback from lpf3_r, and vice versa.
//-----------------------------------------------------------------------------
// left channel

lp_filter
lpf1_l
        in_signal       	pan1	out_l
        in_cutoff_degsize       clock2	out_deg_size
        in_feedback     	lpf4_l	out_output
        in_feedback_mod 	off
        feedback        	-0.5
        feedback_modsize        0.0
        wet/dry 		1.0
lpf1_l

range_limit
rl1_l
        in_signal       lpf1_l	out_wet_output
        sig_range_hi    0.5
        sig_range_lo    -0.5
rl1_l

lp_filter
lpf2_l
        in_signal       	rl1_l	out_output
        in_cutoff_degsize       m1_l	out_output
        in_feedback     	rl2_r	out_output
        in_feedback_mod 	off
        feedback        	0.3
        feedback_modsize        0.0
        wet/dry 		1.0
lpf2_l

range_limit
rl2_l
        in_signal       lpf2_l	out_wet_output
        sig_range_hi    0.45
        sig_range_lo    -0.45
rl2_l

lp_filter
lpf3_l
        in_signal       	lpf2_l	out_output
        in_cutoff_degsize       m2_l	out_output
        in_feedback     	rl3_r	out_output
        in_feedback_mod 	off
        feedback        	0.15
        feedback_modsize        0.0
        wet/dry 		1.0
lpf3_l

range_limit
rl3_l
        in_signal       lpf3_l	out_wet_output
        sig_range_hi    0.35
        sig_range_lo    -0.35
rl3_l

lp_filter
lpf4_l
        in_signal       	lpf3_l	out_output
        in_cutoff_degsize       m2_l	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
lpf4_l

//-----------------------------------------------------------------------------
// right channel

lp_filter
lpf1_r
        in_signal       	pan1	out_r
        in_cutoff_degsize       clock2	out_deg_size
        in_feedback     	lpf4_r	out_output
        in_feedback_mod 	off
        feedback        	-0.5
        feedback_modsize        0.0
        wet/dry 		1.0
lpf1_r

range_limit
rl1_r
        in_signal       lpf1_r	out_wet_output
        sig_range_hi    0.5
        sig_range_lo    -0.5
rl1_r

lp_filter
lpf2_r
        in_signal       	rl1_r	out_output
        in_cutoff_degsize       m1_r	out_output
        in_feedback     	rl2_l	out_output
        in_feedback_mod 	off
        feedback        	0.3
        feedback_modsize        0.0
        wet/dry 		1.0
lpf2_r

range_limit
rl2_r
        in_signal       lpf2_r	out_wet_output
        sig_range_hi    0.45
        sig_range_lo    -0.45
rl2_r

lp_filter
lpf3_r
        in_signal       	lpf2_r	out_output
        in_cutoff_degsize       m2_r	out_output
        in_feedback     	rl3_l	out_output
        in_feedback_mod 	off
        feedback        	0.15
        feedback_modsize        0.0
        wet/dry 		1.0
lpf3_r

range_limit
rl3_r
        in_signal       lpf3_r	out_wet_output
        sig_range_hi    0.35
        sig_range_lo    -0.35
rl3_r

lp_filter
lpf4_r
        in_signal       	lpf3_r	out_output
        in_cutoff_degsize       m2_r	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
lpf4_r
//-----------------------------------------------------------------------------
// now add some echo, but without too much low frequency
//
// constant hp_ds has the deg_size of 1200 hrtz

constant hp_ds value 9.7959184 hp_ds

// to calculate: degsize = 360 / (samplerate / frequency)

hp_filter
hpf1_l
        in_signal       	lpf1_l	out_output
        in_cutoff_degsize       hp_ds	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
hpf1_l

echo
echo_l
        in_signal       hpf1_l	out_output
        in_gain_mod     adsr1	out_output
        in_feedback     echo_r	out_wet_output
        in_feedback_mod off
        delay_time      551.0
        gain    	0.65
        gain_modsize    1.0
        feedback        0.65
        feedback_modsize 0.0
        wet/dry 	0.5
echo_l

hp_filter
hpf1_r
        in_signal       	lpf1_r	out_output
        in_cutoff_degsize       hp_ds	out_output
        in_feedback     	off
        in_feedback_mod 	off
        feedback        	0.0
        feedback_modsize        0.0
        wet/dry 		1.0
hpf1_r

echo
echo_r
        in_signal       hpf1_r	out_output
        in_gain_mod     adsr1	out_output
        in_feedback     echo_l	out_wet_output
        in_feedback_mod off
        delay_time      476.0
        gain    	0.5
        gain_modsize    0
        feedback        0.65
        feedback_modsize 0.0
        wet/dry 	0.5
echo_r

//-----------------------------------------------------------------------------
// amplifying time!
//
// the signal was shaped before it was filtered, so 
// applying the adsr to the amplifier would cut out
// a lot of the nice stuff that's been done...

mono_amp
amp0
	in_signal	msc1	out_output
	in_amp_eg	one	out_output
	in_amp_mod	off
	amplitude	5000
	amp_mod_size	0.0
	clip_level	32767
amp0

stereo_amp
amp1
	in_l		lpf1_l	out_output
	in_r		lpf1_r	out_output
	in_amp_eg	one	out_output
	in_amp_mod	seq1	out_velocity_ramp
	left_amplitude	20000	// 32767 is the maximum amplitude
	right_amplitude	20000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp1

stereo_amp
amp2
	in_l		echo_l	out_output
	in_r		echo_r	out_output
	in_amp_eg	one	out_output
	in_amp_mod	seq1	out_velocity_ramp
	left_amplitude	20000	// 32767 is the maximum amplitude
	right_amplitude	20000	// 32767 is the maximum amplitude
	amp_mod_size	0.95	// how much influence velocity has in this case
	clip_level	32767	// the maximum allowed amplitude
amp2


mix_chan ch0	in_left		amp0	out_mono
		in_right	amp0	out_mono	ch0

mix_chan ch1	in_left		amp1	out_left
		in_right	amp1	out_right	ch1

mix_chan ch2	in_left		amp2	out_left
		in_right	amp2	out_right	ch2

// 	add as many mix_chan(nels) as you like!

mixer
mix1
        mix
		synthmod	name	ch0	
		synthmod	name	ch1
		synthmod	name	ch2
        mix

        master_level    0.8
mix1

//-----------------------------------------------------------------------------
// time to spew it all out

wavfile_out
wav1
	in_left		mix1	out_left
	in_right	mix1	out_right
	in_bar		time1	out_bar
	in_bar_trig	time1	out_bar_trig
	filename	ambipure02.wav
	start_bar	0
	end_bar		16
wav1

//-----------------------------------------------------------------------------
// time to quit

wcnt_exit
wcnt_exit_module
        in_bar  time1 out_bar
	exit_bar 16
wcnt_exit_module

//-----------------------------------------------------------------------------
wcnt-1.1za/jwmsynth

everything past above line *is* ignored
