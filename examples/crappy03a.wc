wcnt-1.26/jwmsynth
//------------------------------------------------------------------------
//
//  crappy03a.wc:  
//      re-arranges a bad recording of some strings etc
//      recorded from my tv card.
//
//  a slightly modified version using new group features of wcnt-1.25
//  saving roughly 14kb in .wc file size in comparison with the 
//  wcnt-1.2 version of this file.
//------------------------------------------------------------------------

header header.wch

synth_file_reader
timefile
    filename time.wch
    mod_action  exclude
    dobj_action exclude
    modules
    modules
    data_objects
    data_objects
timefile

//------------------------------------------------------------------------

riff
riff1
    quarter_value   64
    notelist
        note name c0  pos 0    len 28  vel 1.0
        note name c0  pos 32   len 12  vel 1.0
        note name c0  pos 48   len 32  vel 1.0
        note name c0  pos 84   len 21  vel 1.0
        note name c0  pos 112  len 12  vel 1.0
        note name c0  pos 128  len 42  vel 1.0
        note name c0  pos 176  len 12  vel 1.0
        note name c0  pos 192  len 12  vel 1.0
        note name c0  pos 224  len 12  vel 1.0
    notelist
riff1

riff
riff1z
    quarter_value   64
    notelist
        note name c0  pos 0    len 11  vel 1.0
        note name c0  pos 12   len 11  vel 1.0
        note name c0  pos 32   len 11  vel 1.0
        note name c0  pos 48   len 11  vel 1.0
        note name c0  pos 64   len 11  vel 1.0
        note name c0  pos 84   len 11  vel 1.0
        note name c0  pos 96   len 11  vel 1.0
        note name c0  pos 112  len 11  vel 1.0
        note name c0  pos 128  len 11  vel 1.0
        note name c0  pos 144  len 11  vel 1.0
        note name c0  pos 160  len 11  vel 1.0
        note name c0  pos 176  len 11  vel 1.0
        note name c0  pos 192  len 11  vel 1.0
        note name c0  pos 208  len 11  vel 1.0
        note name c0  pos 224  len 11  vel 1.0
        note name c0  pos 240  len 11  vel 1.0
    notelist
riff1z

sequencer
seq1
    track 
        riff_node
            riff riff1  bar 0   transpose 0
            repeat 7    repeat_stripe   1
        riff_node
            riff riff1z  bar 8   transpose 0
            repeat 7    repeat_stripe   1
    track
    in_bar              time1 out_bar
    in_bar_trig         time1 out_bar_trig
    in_pos_step_size    time1 out_pos_step_size
    in_beats_per_bar    time1 out_beats_per_bar
    in_beat_value       time1 out_beat_value
    start_bar 0
    velocity_response_time 5
seq1

pattern_trig
nextdrum
    in_trig  seq1 out_note_on_trig
    pattern 0010-1000-0100-0001
nextdrum

stepper
stepper1
    step_shape
        stepvx  pos 0.25    ul 0.25  ll 0.25
        stepvx  pos 0.50    ul 0.50  ll 0.50
        stepvx  pos 0.75    ul 0.75  ll 0.75
    step_shape
    in_trig          nextdrum   out_trig
    in_restart_trig  off
    in_modulation    off
    step_count      32
    up_thresh       1.0
    lo_thresh       0.0
    response_time   0.0
    recycle_mode    on
stepper1

//---------------------------------------------------------
// almost all the remaing modules will all be grouped
// together...

pattern_trig
strig1
    in_trig  seq1 out_note_on_trig
    pattern  1000
strig1

// set frequency for sample to playback at:

osc_clock
osc1
        in_note_on_trig     strig1 out_trig
        in_note_slide_trig  seq1    out_note_slide_trig
        in_play_state       adsr1   out_play_state
        in_frequency        seq1    out_frequency
        in_freq_mod1        off
        in_freq_mod2        off
        octave_offset       -1
        tuning_semitones    0.0
        portamento_time     150.0
        response_time       2.5
        freq_mod1_size      1
        freq_mod2_size      1
osc1

// the sample:
//
// crappytvsample.wav is 5.24771 seconds, 231424 samples
// 14464 samples per 16th note
// 216960 position of last drum noise

wavfilein
crappy
    filename    samples/crappytvsamplev2.wav
    root_note   c0
crappy

sampler
sampler1
        in_play_trig        strig1 out_trig
        in_stop_trig        off
        in_start_pos_mod    stepper1    out_output
        in_phase_step         osc1        out_phase_step
        wavfile                 crappy
        play_dir                fwd
        play_mode               wrap
        jump_mode               play
        start_pos_min           0
        start_pos_max           216960
        loop_mode               bi
        loop_start_pos          4000
        loop_end_pos            5464
        loop_is_offset          on
        bi-directional_offset   0
        anti_clip_samples       150
        anti_clip_each_end      on
        zero_search_range       0
        phase_step_amount          1.0
sampler1

adsr
adsr1
        envelope
        section name attack
            ut  35    ul  0.75
            lt  35    ll  0.75
        section name attack
            ut  55    ul  1.0
            lt  55    ll  1.0
        section name decay
            ut  105    ul  0.65
            lt  105    ll  0.65
        section name release
            ut  700    ul  0.0
            lt  700    ll  0.0
        envelope
        in_note_on_trig     strig1 out_trig
        in_note_off_trig    off
        in_velocity         off
        up_thresh        1.0
        lo_thresh        0.0
        start_level      0.0
        min_time         75.0
        max_sustain_time 0.0
        release_is_ratio on
        sustain_state    off
        zero_retrigger   off
adsr1

// filter out high-pitched whiney frequencies
// (artifacts from tv recording)

glame_filter
glpf-l
    in_signal     sampler1  out_left
    in_freq_mod1  off
    filter_type     lowpass
    freq            4000
    freq_mod1_size  1.0
    stages          2
glpf-l

glame_filter
glpf-r
    in_signal     sampler1  out_right
    in_freq_mod1  off
    filter_type     lowpass
    freq            4000
    freq_mod1_size  1.0
    stages          2
glpf-r

// apply enevelopes

multiplier
dl1
    in_signal1 glpf-l out_output
    in_signal2 adsr1  out_output
dl1

multiplier
dr1
    in_signal1 glpf-r out_output
    in_signal2 adsr1  out_output
dr1

// want to let part of each sampler through to an echo
// using logic trigs and wait trigs to get the next trig
// from sequencer directly after the sampler was triggered
// wtrig will trigger the adsr...

logic_trigger
atrig1
    in_trig1 strig1 out_trig
    in_trig2 seq1 out_note_on_trig
    function xor
    precision 1
atrig1

wait_trig
wtrig1
    in_trig1  atrig1 out_trig
    in_trig2  strig1 out_trig
    min_wait_time  0.0
    max_wait_time  0.0
    count 1
wtrig1

adsr
adsrx1
    envelope
        section name attack
            ut  150   ul  1.0
            lt  150   ll  1.0
        section name decay
            ut  150  ul  0.9
            lt  150  ll  0.9
        section name decay
            ut  150 ul  0.75
            lt  150 ll  0.75
        section name release
            ut  175 ul  0.0
            lt  175 ll  0.0
    envelope
    in_note_on_trig     wtrig1 out_trig
    in_note_off_trig    off
    in_velocity         off
    up_thresh        1.0
    lo_thresh        0.0
    start_level      0.0
    min_time         175.0
    max_sustain_time 0.0
    release_is_ratio on
    sustain_state   off
    zero_retrigger  off
adsrx1

echo
lecho1
    in_signal       dl1 out_output
    in_gain_mod     adsrx1   out_output
    in_feedback     recho1   out_wet_output
    in_feedback_mod off
    delay_time          912.5
    gain                1.0
    gain_mod_size        1.0
    feedback            0.825
    feedback_mod_size    1.0
    wet/dry             1.0
lecho1

echo
recho1
    in_signal       dr1 out_output
    in_gain_mod     adsrx1   out_output
    in_feedback     lecho1   out_wet_output
    in_feedback_mod off
    delay_time          287.5
    gain                1.0
    gain_mod_size        1.0
    feedback            0.825
    feedback_mod_size    1.0
    wet/dry             1.0
recho1

wcnt_signal sdl1 in_signal dl1 out_output level 1.0 sdl1
wcnt_signal sdr1 in_signal dr1 out_output level 1.0 sdr1

wcnt_signal cl1 in_signal lecho1 out_output level 1.0 cl1
wcnt_signal cr1 in_signal recho1 out_output level 1.0 cr1

//---------------------------------------------------------
// create the initial module group

group
g1
    modules
        synthmod name strig1
        synthmod name osc1
        synthmod name sampler1
        synthmod name adsr1
        synthmod name glpf-l
        synthmod name glpf-r
        synthmod name dl1
        synthmod name dr1
        synthmod name atrig1
        synthmod name wtrig1
        synthmod name adsrx1
        synthmod name lecho1
        synthmod name recho1
        synthmod name sdl1
        synthmod name sdr1
        synthmod name cl1
        synthmod name cr1
    modules
g1

copier g1copier1 from g1 to g2 g1copier1
copier g1copier2 from g1 to g3 g1copier2
copier g1copier3 from g1 to g4 g1copier3

// now edit the new groups modules params so they don't all
// produce exactly the same sound.

param_editor
crappy03_wc_pe
    editlist
        edit g2.strig1
            pattern  0100
        edit g3.strig1
            pattern  0010
        edit g4.strig1
            pattern  0001
        edit g2.osc1
            tuning_semitones 0.1
        edit g3.osc1
            tuning_semitones 0.2
        edit g4.osc1
            tuning_semitones 3.0
        edit g2.lecho1
            delay_time  812.5
        edit g2.recho1
            delay_time  187.5
        edit g3.lecho1
            delay_time  212.5
        edit g3.recho1
            delay_time  787.5
        edit g4.lecho1
            delay_time  752.5
        edit g4.recho1
            delay_time  225.5
    editlist
crappy03_wc_pe

//---------------------------------------------------------
// finished grouping and editing, now mix it all together.

combiner
smix_l
    signals
        synthmod name g1.sdl1
        synthmod name g2.sdl1
        synthmod name g3.sdl1
        synthmod name g4.sdl1
    signals
    mean_total off
smix_l

combiner
smix_r
    signals
        synthmod name g1.sdr1
        synthmod name g2.sdr1
        synthmod name g3.sdr1
        synthmod name g4.sdr1
    signals
    mean_total off
smix_r

wcnt_signal drymix_l in_signal smix_l out_output level 1.0 drymix_l
wcnt_signal drymix_r in_signal smix_r out_output level 1.0 drymix_r

combiner
mix_l
        signals
                synthmod name drymix_l
                synthmod name g1.cl1
                synthmod name g2.cl1
                synthmod name g3.cl1
                synthmod name g4.cl1
        signals
        mean_total off
mix_l

combiner
mix_r
        signals
                synthmod name drymix_r
                synthmod name g1.cr1
                synthmod name g2.cr1
                synthmod name g3.cr1
                synthmod name g4.cr1
        signals
        mean_total off
mix_r

// filter out of that horrible high pitched
// interfence from recording tv-card.

clock
fclock1
    in_freq_mod1  off
    freq            2000.0
    freq_mod1_size  1.0
fclock1

lp_filter
lpfL
    in_signal          mix_l    out_output
    in_cutoff_phase_step  fclock1  out_phase_step
    in_feedback        off
    in_feedback_mod    off
    feedback          0.0
    feedback_mod_size  0.0
    wet/dry           1.0
lpfL

copier lc1 from lpfL to lpfR lc1

input_editor
crappy03_wc_ie
    editlist
        connect lpfR
            in_signal mix_r     out_output
    editlist
crappy03_wc_ie

// amplify

stereo_amp
amp1
    in_left     lpfL    out_output
    in_right    lpfR    out_output
    in_amp_eg       one out_output
    in_amp_mod      off
    left_level      0.9875
    right_level     0.9875
    amp_mod_size    0.0
    clip_level      1.0
amp1

wavfile_out
wav1
    in_left     amp1    out_left
    in_right    amp1    out_right
    in_bar      time1   out_bar
    in_bar_trig time1   out_bar_trig
    data_format float32
    filename    crappy03a.wav
    start_bar   0
    end_bar     4
wav1

// setup how long to process:

wcnt_exit
wcnt_exit_module
    in_bar  time1   out_bar
    exit_bar    4
wcnt_exit_module

//------------------------------------------------------------------------
// End Of File _jwm 2005.
//------------------------------------------------------------------------
wcnt-1.26/jwmsynth
