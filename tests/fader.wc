wcnt-1.26/jwmsynth

samplerate 44100

// testing the fader
//
// note: the fader used to have an in_bar_trig input to tell it when to
//      read its in_bar input, but the trig input has been removed. the
//      fader behaviour when input triggered faster than the bar updated
//      was no different to how it behaved when they both updated in sync
//      so it was decided as a pointless feature and removed.
//
//      also updated is the behaviour of an early fade-out. that is, a
//      fade-out occurs before fade-in has finished. the old behaviour
//      meant the fade-out never happened. new behaviour means the fade-out
//      starts right away from the current output level. the fade-out
//      gradient does not change (ie length of fade-out is proportional
//      to output level when fade-out began).
//

timer
t
    timings
        time seconds 0.0
        time seconds 0.5
        time seconds 1.0
        time seconds 1.5
        time seconds 2.0
        time seconds 2.5
        time seconds 3.0
    timings
    time_is_relative off
t

// normal: fade-in > maintain > fade-out
fader
f1
    in_bar          t out_count
    start_bar       0
    end_bar         4
    fade_in_time   1000
    fade_out_time  1000
f1

// interuppted: fade-in > fade-out
fader
f2
    in_bar          t out_count
    start_bar       0
    end_bar         1
    fade_in_time   1000
    fade_out_time  1000
f2

//  note start_bar and end_bar of wavfile_out and wcnt_exit
//  all use the fader outputs. the fader does not simply pass
//  its in_bar through to out_bar. it outputs a zero when fade-in
//  begins, and one when fade-out ends, making it easier to stop
//  things at the proper time.

wavfile_out
w
    in_left      f1 out_output
    in_right     f2 out_output
    in_bar       f1 out_bar
    snapshot_mode  on
    data_format    pcm16
    filename       fader_output.wav
    start_bar      0
    end_bar        1
w

wcnt_exit
x
    in_bar      f1 out_bar
    exit_bar    1
x

wcnt-1.26/jwmsynth



